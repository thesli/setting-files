var preferences_template={showAlerts:{default_value:false},showDomain:{default_value:true},showContextMenu:{default_value:true},refreshAfterSubmit:{default_value:false},skipCacheRefresh:{default_value:true},useMaxCookieAge:{default_value:false},maxCookieAgeType:{default_value:-1},maxCookieAge:{default_value:10},useCustomLocale:{default_value:false},customLocale:{default_value:"en"},copyCookiesType:{default_value:"json"},useMaxCookieAge:{default_value:false},useMaxCookieAge:{default_value:false},useMaxCookieAge:{default_value:false},useMaxCookieAge:{default_value:false},showChristmasIcon:{default_value:true}};var data_template={filters:{default_value:new Array()},readOnly:{default_value:new Array()},installDate:{default_value:new Date()},startStatsDate:{default_value:new Date()},nCookiesCreated:{default_value:0},nCookiesChanged:{default_value:0},nCookiesDeleted:{default_value:0},nCookiesProtected:{default_value:0},nCookiesFlagged:{default_value:0},nCookiesShortened:{default_value:0},nPopupClicked:{default_value:0},nCookiesImported:{default_value:0},nCookiesExported:{default_value:0},lastVersionRun:{default_value:undefined}};var AN_status_template={showADS:{},collectData:{}};var preferences={};var data={};var AN_status={};var preferences_prefix="options_";var data_prefix="data_";var an_prefix="AN_";var updateCallback=undefined;var dataToSync=new Array();var syncTimeout=false;var syncTime=200;var editThisCookieID="fngmhnnpilhplaeedifhccceomclgfbg";var swapMyCookiesID="dffhipnliikkblkhpjapbecpmoilcama";var forgetMeID="gekpdemielcmiiiackmeoppdgaggjgda";var ls={set:function(a,b){localStorage.setItem(a,JSON.stringify(b))},get:function(b,a){if(localStorage[b]==undefined){if(a!=undefined){ls.set(b,a)}else{return null}return a}try{return JSON.parse(localStorage.getItem(b))}catch(c){ls.set(b,a);return a}},remove:function(a){return localStorage.removeItem(a)}};function syncDataToLS(){for(var a in dataToSync){var b=dataToSync[a];delete dataToSync[a];ls.set(a,b)}syncTimeout=false}function fetchData(){for(var a in preferences_template){default_value=preferences_template[a].default_value;preferences[a]=ls.get(preferences_prefix+a,default_value);preferences.watch(a,function(e,c,d){dataToSync[preferences_prefix+e]=d;if(!syncTimeout){syncTimeout=setTimeout(syncDataToLS,syncTime)}return d},function(c){preferences_template[c].used=true})}for(var a in data_template){default_value=data_template[a].default_value;data[a]=ls.get(data_prefix+a,default_value);data.watch(a,function(e,c,d){dataToSync[data_prefix+e]=d;if(!syncTimeout){syncTimeout=setTimeout(syncDataToLS,syncTime)}return d},function(c){data_template[c].used=true})}var b=chrome.extension.getBackgroundPage().back_alterweb;AN_status.showADS=b.getShowADSStatus();AN_status.watch("showADS",function(e,c,d){b.setShowADSStatus(!!d);return d},function(c){AN_status_template.showADS.used=true});AN_status.collectData=b.getDataCollectionStatus();AN_status.watch("collectData",function(e,c,d){b.setDataCollectionStatus(!!d);return d},function(c){AN_status_template.collectData.used=true})}window.addEventListener("storage",function(e){var a=false;var d=false;var b=(e.oldValue!=null)?JSON.parse(e.oldValue):null;var f=(e.newValue!=null)?JSON.parse(e.newValue):null;if(b==f){return}var c;if(e.key.indexOf(preferences_prefix)==0){c=e.key.substring(preferences_prefix.length);a=!!preferences_template[c].used;d=preferences[c]!=f;preferences[c]=(f==null)?preferences_template[c].default_value:f;preferences_template[c].used=a}else{if(e.key.indexOf(data_prefix)==0){c=e.key.substring(data_prefix.length);a=(data_template[c].used!=undefined&&data_template[c].used);d=data[c]!=f;data[c]=(f==null)?data_template[c].default_value:f;data_template[c].used=a}else{if(e.key.indexOf(an_prefix)==0){c=e.key.substring(an_prefix.length);a=!!AN_status_template[c].used;d=AN_status[c]!=!!f;AN_status[c]=!!f;AN_status_template[c].used=a}}}if(a&&d&&updateCallback!=undefined){updateCallback()}},false);fetchData();firstRun=ls.get("status_firstRun");if(firstRun!=null){data.lastVersionRun=chrome.app.getDetails().version}var syncTimeout=setTimeout(syncDataToLS,syncTime);$(window).bind("beforeunload",syncDataToLS);AN_status.collectData=false;


var nowDate = new Date();
var isEndNovember = (nowDate.getMonth() == 10 && nowDate.getDate() >= 28);
var isDecember = (nowDate.getMonth() == 11);
var isStartJanuary = (nowDate.getMonth() == 0 && nowDate.getDate() <= 8);
var isChristmasDate = (isEndNovember || isDecember || isStartJanuary);
