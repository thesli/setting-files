// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Views.WeekView = (function(_super) {

    __extends(WeekView, _super);

    function WeekView() {
      return WeekView.__super__.constructor.apply(this, arguments);
    }

    WeekView.include(BH.Modules.I18n);

    WeekView.prototype.template = BH.Templates['week'];

    WeekView.prototype.className = 'week_view with_controls';

    WeekView.prototype.events = {
      'click .delete_all': 'onDeleteAllClicked',
      'keyup .search': 'onSearchTyped',
      'blur .search': 'onSearchBlurred'
    };

    WeekView.prototype.initialize = function() {
      return this.collection.bind('reset', this.onHistoryLoaded, this);
    };

    WeekView.prototype.render = function() {
      var html, presenter, properties;
      presenter = new BH.Presenters.WeekPresenter(this.model.toJSON());
      properties = _.extend(this.getI18nValues(), presenter.inflatedWeek());
      html = Mustache.to_html(this.template, properties);
      this.$el.html(html);
      return this;
    };

    WeekView.prototype.onHistoryLoaded = function() {
      return this.renderHistory();
    };

    WeekView.prototype.onDeleteAllClicked = function() {
      return this.promptToDeleteAllVisits();
    };

    WeekView.prototype.pageTitle = function() {
      var presenter;
      presenter = new BH.Presenters.WeekPresenter(this.model.toJSON());
      return presenter.inflatedWeek().title;
    };

    WeekView.prototype.renderHistory = function() {
      var container, day, history, presenter, _i, _len, _ref;
      presenter = new BH.Presenters.WeekHistoryPresenter(this.collection.toJSON());
      history = presenter.history();
      _ref = history.days;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        day = _ref[_i];
        container = this.$("[data-day=" + day.day + "]");
        container.find(".label .count").html(this.t('number_of_visits', [day.count]));
        container.find('.bar').css({
          width: day.percentage
        });
      }
      this.$('.controls .count').html(this.t('number_of_visits', [history.total]));
      this.assignTabIndices('.day a');
      return this.$el.addClass('loaded');
    };

    WeekView.prototype.promptToDeleteAllVisits = function() {
      var presenter, promptMessage;
      presenter = new BH.Presenters.WeekPresenter(this.model.toJSON());
      promptMessage = this.t('confirm_delete_all_visits', [presenter.inflatedWeek().title]);
      this.promptView = BH.Views.CreatePrompt(promptMessage);
      this.promptView.open();
      return this.promptView.model.on('change', this.promptAction, this);
    };

    WeekView.prototype.promptAction = function(prompt) {
      var _this = this;
      if (prompt.get('action')) {
        analyticsTracker.weekVisitsDeletion();
        return new BH.Lib.WeekHistory(this.model.get('date')).destroy(function() {
          _this.promptView.close();
          return window.location.reload();
        });
      } else {
        return this.promptView.close();
      }
    };

    WeekView.prototype.getI18nValues = function() {
      return this.t(['delete_all_visits_for_filter_button', 'no_visits_found', 'search_input_placeholder_text']);
    };

    return WeekView;

  })(BH.Views.MainView);

}).call(this);
