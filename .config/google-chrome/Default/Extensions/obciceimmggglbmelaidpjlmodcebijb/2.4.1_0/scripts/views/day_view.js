// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Views.DayView = (function(_super) {

    __extends(DayView, _super);

    function DayView() {
      return DayView.__super__.constructor.apply(this, arguments);
    }

    DayView.include(BH.Modules.I18n);

    DayView.prototype.template = BH.Templates['day'];

    DayView.prototype.className = 'day_view with_controls';

    DayView.prototype.events = {
      'click .delete_day': 'onDeleteAllClicked',
      'click .back_to_week': 'onBackToWeekClicked',
      'keyup .search': 'onSearchTyped',
      'blur .search': 'onSearchBlurred'
    };

    DayView.prototype.initialize = function() {
      return this.collection.bind('reset', this.onHistoryLoaded, this);
    };

    DayView.prototype.render = function() {
      var html, presenter, properties;
      presenter = new BH.Presenters.DayPresenter(this.model.toJSON());
      properties = _.extend(this.getI18nValues(), presenter.dayInfo());
      html = Mustache.to_html(this.template, properties);
      this.$el.html(html);
      return this;
    };

    DayView.prototype.onHistoryLoaded = function() {
      this.renderHistory();
      this.assignTabIndices('.interval > .visits > .visit > a:first-child');
      return this.updateDeleteButton();
    };

    DayView.prototype.onDeleteAllClicked = function(ev) {
      return this.promptToDeleteAllVisits();
    };

    DayView.prototype.onBackToWeekClicked = function() {
      return this.$('.content').html('');
    };

    DayView.prototype.pageTitle = function() {
      var presenter;
      presenter = new BH.Presenters.DayPresenter(this.model.toJSON());
      return presenter.dayInfo().formalDate;
    };

    DayView.prototype.renderHistory = function() {
      this.dayResultsView = new BH.Views.DayResultsView({
        collection: this.collection
      });
      this.$('.content').html(this.dayResultsView.render().el);
      this.dayResultsView.insertTags();
      this.dayResultsView.attachDragging();
      this.$('.spinner').hide();
      return this.$('.back_to_week').css({
        opacity: 1
      });
    };

    DayView.prototype.updateDeleteButton = function() {
      var deleteButton;
      deleteButton = this.$('button');
      if (this.collection.length === 0) {
        return deleteButton.attr('disabled', 'disabled');
      } else {
        return deleteButton.removeAttr('disabled');
      }
    };

    DayView.prototype.updateUrl = function() {
      return router.navigate(BH.Lib.Url.week(this.options.weekModel.id));
    };

    DayView.prototype.promptToDeleteAllVisits = function() {
      var presenter, promptMessage;
      presenter = new BH.Presenters.DayPresenter(this.model.toJSON());
      promptMessage = this.t('confirm_delete_all_visits', [presenter.dayInfo().formalDate]);
      this.promptView = BH.Views.CreatePrompt(promptMessage);
      this.promptView.open();
      return this.promptView.model.on('change', this.promptAction, this);
    };

    DayView.prototype.promptAction = function(prompt) {
      if (prompt.get('action')) {
        analyticsTracker.dayVisitsDeletion();
        return new BH.Lib.DayHistory(this.model.get('date')).destroy(function() {
          return window.location.reload();
        });
      } else {
        return this.promptView.close();
      }
    };

    DayView.prototype.getI18nValues = function() {
      var properties;
      properties = this.t(['collapse_button', 'expand_button', 'delete_all_visits_for_filter_button', 'no_visits_found', 'search_input_placeholder_text']);
      properties['i18n_back_to_week_link'] = this.t('back_to_week_link', [this.t('back_arrow')]);
      return properties;
    };

    return DayView;

  })(BH.Views.MainView);

}).call(this);
