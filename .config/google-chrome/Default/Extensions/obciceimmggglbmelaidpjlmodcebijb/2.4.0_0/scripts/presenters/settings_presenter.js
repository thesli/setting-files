// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Presenters.SettingsPresenter = (function(_super) {

    __extends(SettingsPresenter, _super);

    function SettingsPresenter(model) {
      this.model = model;
    }

    SettingsPresenter.prototype.settings = function() {
      var properties,
        _this = this;
      properties = {
        startingWeekDays: [],
        openLocations: [],
        timeGroupings: [],
        weekDayOrders: [],
        searchBySelection: this.model.get('searchBySelection'),
        searchByDomain: this.model.get('searchByDomain'),
        domainGrouping: this.model.get('domainGrouping')
      };
      _(['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']).each(function(day) {
        return properties.startingWeekDays.push({
          text: _this.t(day),
          value: day
        });
      });
      _(['last_visit', 'current_day', 'current_week']).each(function(location) {
        return properties.openLocations.push({
          text: _this.t(location),
          value: location
        });
      });
      _(['descending', 'ascending']).each(function(order) {
        return properties.weekDayOrders.push({
          text: _this.t(order),
          value: order
        });
      });
      _([15, 30, 60]).each(function(timeGrouping) {
        return properties.timeGroupings.push({
          text: _this.t("" + timeGrouping + "_minutes_option"),
          value: timeGrouping
        });
      });
      return properties;
    };

    return SettingsPresenter;

  })(BH.Presenters.Base);

}).call(this);
