// Generated by CoffeeScript 1.6.1
(function() {

  BH.Migrations.EnsureDatetimeOnTaggedSites = (function() {

    EnsureDatetimeOnTaggedSites.prototype.name = 'ensure_datetime_on_tagged_sites';

    function EnsureDatetimeOnTaggedSites(options) {
      this.options = options;
    }

    EnsureDatetimeOnTaggedSites.prototype.run = function() {
      var updateTag,
        _this = this;
      updateTag = function(sites, name) {
        return persistence.tag().removeTag(name, function() {
          return persistence.tag().addSitesToTag(sites, name);
        });
      };
      return persistence.tag().getCompletedMigrations(function(migrations) {
        if (migrations.indexOf(_this.name) === -1) {
          persistence.tag().fetchTags(function(tags, compiledTags) {
            var compiledTag, modified, modifiedSites, site, _i, _j, _len, _len1, _ref, _results;
            _results = [];
            for (_i = 0, _len = compiledTags.length; _i < _len; _i++) {
              compiledTag = compiledTags[_i];
              modifiedSites = [];
              modified = false;
              _ref = compiledTag.sites;
              for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
                site = _ref[_j];
                if (site.datetime == null) {
                  site.datetime = new Date().getTime();
                  modified = true;
                }
                modifiedSites.push(site);
              }
              if (modified) {
                _results.push(updateTag(modifiedSites, compiledTag.name));
              } else {
                _results.push(void 0);
              }
            }
            return _results;
          });
          return persistence.tag().markMigrationAsComplete(_this.name, function() {
            return _this.options.analyticsTracker.ensureDatetimeOnTaggedSitesMigration();
          });
        }
      });
    };

    return EnsureDatetimeOnTaggedSites;

  })();

}).call(this);
