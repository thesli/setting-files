// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Modals.NewTagModal = (function(_super) {

    __extends(NewTagModal, _super);

    function NewTagModal() {
      return NewTagModal.__super__.constructor.apply(this, arguments);
    }

    NewTagModal.include(BH.Modules.I18n);

    NewTagModal.prototype.className = 'new_tag_view';

    NewTagModal.prototype.template = BH.Templates['new_tag'];

    NewTagModal.prototype.events = {
      'click .cancel': 'cancelClicked',
      'click .rename': 'newTagClicked',
      'keyup .new_tag': 'newTagKeyup'
    };

    NewTagModal.prototype.initialize = function() {
      this.chromeAPI = chrome;
      this.tracker = this.options.tracker;
      return this.attachGeneralEvents();
    };

    NewTagModal.prototype.render = function() {
      this.$el.html(this.renderTemplate(this.getI18nValues()));
      return this;
    };

    NewTagModal.prototype.cancelClicked = function(ev) {
      ev.preventDefault();
      return this.close();
    };

    NewTagModal.prototype.newTagKeyup = function() {
      return this.$('input.new_tag').removeClass('error');
    };

    NewTagModal.prototype.newTagClicked = function(ev) {
      var tag;
      ev.preventDefault();
      tag = this.$('input.new_tag').val();
      this.model.set({
        name: tag
      }, {
        validate: true
      });
      if (this.model.validationError) {
        return this.$('input.new_tag').addClass('error');
      } else {
        return this.close();
      }
    };

    NewTagModal.prototype.getI18nValues = function() {
      return this.t(['new_tag_button', 'prompt_cancel_button', 'new_tag_placeholder', 'create_new_tag_title']);
    };

    return NewTagModal;

  })(BH.Modals.Base);

}).call(this);
