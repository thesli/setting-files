// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Views.PromptView = (function(_super) {

    __extends(PromptView, _super);

    function PromptView() {
      return PromptView.__super__.constructor.apply(this, arguments);
    }

    PromptView.include(BH.Modules.I18n);

    PromptView.prototype.className = 'prompt_view';

    PromptView.prototype.template = BH.Templates['prompt'];

    PromptView.prototype.events = {
      'click .no': 'clickedNo',
      'click .yes': 'clickedYes'
    };

    PromptView.prototype.initialize = function() {
      this.chromeAPI = chrome;
      return this.attachGeneralEvents();
    };

    PromptView.prototype.render = function() {
      this.$el.html(this.renderTemplate(_.extend(this.getI18nValues(), this.model.toJSON())));
      return this;
    };

    PromptView.prototype.clickedNo = function(ev) {
      ev.preventDefault();
      return this.model.set({
        action: false
      });
    };

    PromptView.prototype.clickedYes = function(ev) {
      ev.preventDefault();
      this.spin();
      return this.model.set({
        action: true
      });
    };

    PromptView.prototype.spin = function() {
      return this.$el.addClass('loading');
    };

    PromptView.prototype.getI18nValues = function() {
      return this.t(['prompt_delete_button', 'prompt_cancel_button', 'prompt_title']);
    };

    return PromptView;

  })(BH.Views.ModalView);

  BH.Views.CreatePrompt = function(content) {
    var view;
    view = new BH.Views.PromptView({
      model: new Backbone.Model({
        content: content
      })
    });
    $('body').append(view.render().el);
    return view;
  };

}).call(this);
