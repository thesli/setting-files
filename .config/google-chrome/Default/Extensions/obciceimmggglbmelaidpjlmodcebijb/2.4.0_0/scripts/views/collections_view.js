//@ sourceMappingURL=collections_view.map
// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Views.CollectionsView = (function(_super) {

    __extends(CollectionsView, _super);

    function CollectionsView() {
      return CollectionsView.__super__.constructor.apply(this, arguments);
    }

    CollectionsView.include(BH.Modules.I18n);

    CollectionsView.prototype.className = 'collections_view with_controls';

    CollectionsView.prototype.template = BH.Templates['collections'];

    CollectionsView.prototype.events = {
      'click .delete_all': 'onDeleteCollectionsClicked'
    };

    CollectionsView.prototype.initialize = function() {
      return this.chromeAPI = chrome;
    };

    CollectionsView.prototype.pageTitle = function() {
      return this.t('collections_title');
    };

    CollectionsView.prototype.render = function() {
      var html;
      html = Mustache.to_html(this.template, this.getI18nValues());
      this.$el.append(html);
      return this;
    };

    CollectionsView.prototype.onDeleteCollectionsClicked = function(ev) {
      return this.promptToDeleteCollections();
    };

    CollectionsView.prototype.promptToDeleteCollections = function() {
      var promptMessage;
      promptMessage = this.t('confirm_delete_all_collections');
      this.promptView = BH.Views.CreatePrompt(promptMessage);
      this.promptView.open();
      return this.promptView.model.on('change', this.promptAction, this);
    };

    CollectionsView.prototype.promptAction = function(prompt) {
      var _this = this;
      if (prompt.get('action')) {
        track.dayVisitsDeletion();
        this.history.destroy();
        return this.history.fetch({
          success: function() {
            return _this.promptView.close();
          }
        });
      } else {
        return this.promptView.close();
      }
    };

    CollectionsView.prototype.getI18nValues = function() {
      var properties;
      properties = this.t(['collections_title', 'search_input_placeholder_text', 'delete_all_collections']);
      properties.i18n_number_of_collections = this.t('number_of_collections', [5]);
      return properties;
    };

    return CollectionsView;

  })(BH.Views.MainView);

}).call(this);
