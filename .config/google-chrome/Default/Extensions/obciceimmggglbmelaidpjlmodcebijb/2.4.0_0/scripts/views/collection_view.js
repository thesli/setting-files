//@ sourceMappingURL=collection_view.map
// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Views.CollectionView = (function(_super) {

    __extends(CollectionView, _super);

    function CollectionView() {
      return CollectionView.__super__.constructor.apply(this, arguments);
    }

    CollectionView.include(BH.Modules.I18n);

    CollectionView.prototype.className = 'collection_view with_controls';

    CollectionView.prototype.template = BH.Templates['collection'];

    CollectionView.prototype.events = {
      'click .delete_sites': 'onDeleteSitesClicked'
    };

    CollectionView.prototype.initialize = function() {
      return this.chromeAPI = chrome;
    };

    CollectionView.prototype.pageTitle = function() {
      return this.t('collection_title', [this.options.name]);
    };

    CollectionView.prototype.render = function() {
      var html, properties;
      properties = _.extend(this.getI18nValues(), {
        collectionsUrl: '#collections'
      });
      html = Mustache.to_html(this.template, properties);
      this.$el.append(html);
      return this;
    };

    CollectionView.prototype.onDeleteSitesClicked = function(ev) {
      return this.promptToDeleteAllSites();
    };

    CollectionView.prototype.promptToDeleteAllSites = function() {
      var promptMessage;
      promptMessage = this.t('confirm_delete_all_sites_in_collection', [this.options.name]);
      this.promptView = BH.Views.CreatePrompt(promptMessage);
      this.promptView.open();
      return this.promptView.model.on('change', this.promptAction, this);
    };

    CollectionView.prototype.promptAction = function(prompt) {
      var _this = this;
      if (prompt.get('action')) {
        track.dayVisitsDeletion();
        this.history.destroy();
        return this.history.fetch({
          success: function() {
            return _this.promptView.close();
          }
        });
      } else {
        return this.promptView.close();
      }
    };

    CollectionView.prototype.getI18nValues = function() {
      var name, properties;
      name = this.options.name.charAt(0).toUpperCase() + this.options.name.slice(1);
      properties = this.t(['delete_all_sites_in_collection', 'search_input_placeholder_text']);
      properties['i18n_collection_title'] = this.t('collection_title', [name]);
      properties['i18n_back_to_collections_link'] = this.t('back_to_collections_link', [this.t('back_arrow')]);
      return properties;
    };

    return CollectionView;

  })(BH.Views.MainView);

}).call(this);
