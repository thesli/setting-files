// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Lib.SelectionContextMenu = (function(_super) {

    __extends(SelectionContextMenu, _super);

    SelectionContextMenu.include(BH.Modules.I18n);

    SelectionContextMenu.include(BH.Modules.Url);

    function SelectionContextMenu(options) {
      if (options == null) {
        options = {};
      }
      if (options.chrome == null) {
        throw "Chrome API not set";
      }
      if (options.tracker == null) {
        throw "Tracker not set";
      }
      this.chromeAPI = options.chrome;
      this.tracker = options.tracker;
      this.id = 'better_history_selection_context_menu';
    }

    SelectionContextMenu.prototype.create = function() {
      var _ref,
        _this = this;
      if (((_ref = this.chromeAPI.contextMenus) != null ? _ref.create : void 0) != null) {
        this.menu = this.chromeAPI.contextMenus.create({
          title: this.t('search_in_history'),
          contexts: ['selection'],
          id: this.id
        });
        return this.chromeAPI.contextMenus.onClicked.addListener(function(data) {
          return _this.onClick(data);
        });
      }
    };

    SelectionContextMenu.prototype.onClick = function(data) {
      var url, urlOptions;
      if (data.menuItemId === this.id) {
        urlOptions = {
          absolute: true
        };
        url = this.urlFor('search', data.selectionText, urlOptions);
        this.tracker.selectionContextMenuClick();
        return this.chromeAPI.tabs.create({
          url: url
        });
      }
    };

    SelectionContextMenu.prototype.remove = function() {
      this.chromeAPI.contextMenus.remove(this.menu);
      return delete this.menu;
    };

    return SelectionContextMenu;

  })(BH.Base);

}).call(this);
