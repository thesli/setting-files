// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Lib.Omnibox = (function(_super) {

    __extends(Omnibox, _super);

    Omnibox.include(BH.Modules.Url);

    function Omnibox(options) {
      if (options == null) {
        options = {};
      }
      if (options.chrome == null) {
        throw "Chrome API not set";
      }
      if (options.tracker == null) {
        throw "Tracker not set";
      }
      this.chromeAPI = options.chrome;
      this.tracker = options.tracker;
    }

    Omnibox.prototype.listen = function() {
      var _ref, _ref1,
        _this = this;
      if ((_ref = this.chromeAPI.omnibox) != null) {
        _ref.onInputChanged.addListener(function(text, suggest) {
          return _this.setDefaultSuggestion(text);
        });
      }
      return (_ref1 = this.chromeAPI.omnibox) != null ? _ref1.onInputEntered.addListener(function(text) {
        _this.tracker.omniboxSearch();
        return _this.getActiveTab(function(tabId) {
          return _this.updateTabURL(tabId, text);
        });
      }) : void 0;
    };

    Omnibox.prototype.setDefaultSuggestion = function(text) {
      var _ref;
      return (_ref = this.chromeAPI.omnibox) != null ? _ref.setDefaultSuggestion({
        description: "Search <match>" + text + "</match> in history"
      }) : void 0;
    };

    Omnibox.prototype.getActiveTab = function(callback) {
      return this.chromeAPI.tabs.query({
        active: true,
        currentWindow: true
      }, function(tabs) {
        return callback(tabs[0].id);
      });
    };

    Omnibox.prototype.updateTabURL = function(tabId, text) {
      return this.chromeAPI.tabs.update(tabId, {
        url: this.urlFor('search', text, {
          absolute: true
        })
      });
    };

    return Omnibox;

  })(BH.Base);

}).call(this);
