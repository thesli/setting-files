// Generated by CoffeeScript 1.6.1
(function() {

  BH.Presenters.TagsPresenter = (function() {

    function TagsPresenter(collection) {
      this.collection = collection;
    }

    TagsPresenter.prototype.tagsSummary = function() {
      var model, orderedSites, out, tag, _i, _len, _ref;
      out = [];
      _ref = this.collection.tagOrder;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tag = _ref[_i];
        model = this.collection.findWhere({
          name: tag
        });
        if (model != null) {
          orderedSites = model.get('sites').sort(function(a, b) {
            return b.datetime - a.datetime;
          });
          out.push({
            name: model.get('name'),
            count: model.get('sites').length,
            sites: orderedSites.slice(0, 10)
          });
        }
      }
      return {
        tags: out
      };
    };

    TagsPresenter.prototype.selectedAndUnselectedTagsforSites = function(sites) {
      var model, orderedSites, out, result, site, tag, tagged;
      out = (function() {
        var _i, _j, _len, _len1, _ref, _results;
        _ref = this.collection.tagOrder;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          tag = _ref[_i];
          model = this.collection.findWhere({
            name: tag
          });
          orderedSites = model.get('sites').sort(function(a, b) {
            return b.datetime - a.datetime;
          });
          tagged = false;
          for (_j = 0, _len1 = sites.length; _j < _len1; _j++) {
            site = sites[_j];
            result = _.find(model.get('sites'), function(taggedSite) {
              return taggedSite.url === site.url;
            });
            if (result != null) {
              tagged = true;
              break;
            }
          }
          _results.push({
            name: model.get('name'),
            tagged: tagged
          });
        }
        return _results;
      }).call(this);
      return {
        tags: out
      };
    };

    return TagsPresenter;

  })();

}).call(this);
