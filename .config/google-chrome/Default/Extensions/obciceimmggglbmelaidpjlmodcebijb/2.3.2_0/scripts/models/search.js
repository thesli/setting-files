// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Models.Search = (function(_super) {

    __extends(Search, _super);

    function Search() {
      return Search.__super__.constructor.apply(this, arguments);
    }

    Search.include(BH.Modules.I18n);

    Search.prototype.defaults = function() {
      return {
        query: ''
      };
    };

    Search.prototype.initialize = function() {
      return this.chromeAPI = chrome;
    };

    Search.prototype.validQuery = function() {
      return this.get('query') !== '';
    };

    Search.prototype.toHistory = function() {
      return {
        query: this.get('query')
      };
    };

    Search.prototype.toTemplate = function() {
      var i, joined, term, _i, _len, _ref;
      this.terms = this.get('query').split(' ');
      joined = this.t('searching_title') + ' ';
      _ref = this.terms;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        term = _ref[i];
        joined += "\"" + term + "\"";
        if (i !== this.terms.length - 1) {
          joined += " " + (this.t('and')) + " ";
        }
      }
      return _.extend(this.toJSON(), {
        title: joined
      });
    };

    return Search;

  })(Backbone.Model);

}).call(this);
