// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Models.State = (function(_super) {

    __extends(State, _super);

    function State() {
      return State.__super__.constructor.apply(this, arguments);
    }

    State.include(BH.Modules.I18n);

    State.include(BH.Modules.Url);

    State.prototype.storeName = 'state';

    State.prototype.initialize = function(attrs, options) {
      var weekId;
      this.chromeAPI = chrome;
      this.settings = options.settings;
      if (typeof moment !== "undefined" && moment !== null) {
        weekId = this.startingWeekDate().id();
        return this.set({
          route: this.urlFor('week', weekId)
        });
      }
    };

    State.prototype.updateRoute = function() {
      var route, weekId;
      if (this.settings.get('openLocation') === 'current_day') {
        route = this.urlFor('day', moment(new Date()).id());
      } else if (this.settings.get('openLocation') === 'current_week') {
        weekId = this.startingWeekDate().id();
        route = this.urlFor('week', weekId);
      }
      if (route != null) {
        this.set({
          route: route
        });
      }
      return this.save();
    };

    State.prototype.startingWeekDate = function() {
      return moment(new Date()).past(this.settings.get('startingWeekDay'), 0);
    };

    return State;

  })(Backbone.Model);

}).call(this);
