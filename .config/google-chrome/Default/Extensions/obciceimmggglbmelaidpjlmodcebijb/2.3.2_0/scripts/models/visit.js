// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Models.Visit = (function(_super) {

    __extends(Visit, _super);

    function Visit() {
      return Visit.__super__.constructor.apply(this, arguments);
    }

    Visit.include(BH.Modules.I18n);

    Visit.prototype.defaults = {
      title: '(No Title)'
    };

    Visit.prototype.initialize = function() {
      this.chromeAPI = chrome;
      this.set({
        id: this.cid
      });
      if (this.get('title') === '') {
        return this.set({
          title: this.defaults.title
        });
      }
    };

    Visit.prototype.sync = function(method, model, options) {
      if (method === 'delete') {
        this.chromeAPI.history.deleteUrl({
          url: this.get('url')
        });
        return options.success(this);
      }
    };

    Visit.prototype.toTemplate = function() {
      return _.extend({
        isGrouped: false,
        host: this.domain(),
        path: this.path()
      }, this.toJSON());
    };

    Visit.prototype.domain = function() {
      var match;
      match = this._getDomain(this.get('url'));
      if (match === null) {
        return null;
      } else {
        return match[0];
      }
    };

    Visit.prototype.path = function() {
      if (this._getDomain(this.get('url')) != null) {
        return this.get('url').replace(this._getDomain(this.get('url'))[0], '');
      }
    };

    Visit.prototype._getDomain = function(url) {
      return url.match(/\w+:\/\/(.*?)\//);
    };

    return Visit;

  })(Backbone.Model);

}).call(this);
