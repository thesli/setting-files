//@ sourceMappingURL=tag_visit_view.map
// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Views.TagVisitView = (function(_super) {

    __extends(TagVisitView, _super);

    function TagVisitView() {
      return TagVisitView.__super__.constructor.apply(this, arguments);
    }

    TagVisitView.include(BH.Modules.I18n);

    TagVisitView.prototype.className = 'tag_visit_view';

    TagVisitView.prototype.template = BH.Templates['tag_visit'];

    TagVisitView.prototype.events = {
      'click .done': 'doneClicked',
      'click #add_tag': 'addTagClicked',
      'click .site': 'onSiteClicked',
      'change .tag_all_visits': 'tagAllVisitsClicked'
    };

    TagVisitView.prototype.initialize = function() {
      this.chromeAPI = chrome;
      this.attachGeneralEvents();
      this.tagAllSites = this.collection.length > 1 ? true : false;
      return this.collection.on('change:allTags', this.renderTags, this);
    };

    TagVisitView.prototype.render = function() {
      var properties,
        _this = this;
      properties = _.extend(this.getI18nValues(), {
        sites: this.collection.toJSON(),
        tagAllSites: this.tagAllSites
      });
      this.$el.html(this.renderTemplate(properties));
      setTimeout(function() {
        return _this.$('#tag_name').focus();
      }, 0);
      return this;
    };

    TagVisitView.prototype.renderTags = function() {
      var $el, model;
      if ($el = this.$('li.selected').eq(0)) {
        model = this.collection.findWhere({
          url: $el.data('url')
        });
      }
      if (this.activeTagsView) {
        this.activeTagsView.remove();
      }
      this.activeTagsView = new BH.Views.ActiveTagsView({
        model: model || this.collection,
        tracker: analyticsTracker
      });
      return this.$('.active_tags').html(this.activeTagsView.render().el);
    };

    TagVisitView.prototype.doneClicked = function(ev) {
      var _this = this;
      ev.preventDefault();
      return this.close(function() {
        return _this.trigger('close');
      });
    };

    TagVisitView.prototype.tagAllVisitsClicked = function(ev) {
      var $el;
      ev.preventDefault();
      $el = $(ev.currentTarget);
      this.$('.site').removeClass('selected');
      if ($el.prop('checked')) {
        this.tagAllSites = true;
      } else {
        this.$('.site').eq(0).addClass('selected');
        this.tagAllSites = false;
      }
      this.renderTags();
      return true;
    };

    TagVisitView.prototype.onSiteClicked = function(ev) {
      var $el;
      ev.preventDefault();
      $el = $(ev.currentTarget);
      if (!this.tagAllSites && this.collection.length > 1) {
        this.$('.site').removeClass('selected');
        $el.addClass('selected');
        return this.renderTags();
      }
    };

    TagVisitView.prototype.addTagClicked = function(ev) {
      var $selectedEl, $tagName, model, parent, tag;
      ev.preventDefault();
      $tagName = this.$('#tag_name');
      tag = $tagName.val();
      $tagName.val('');
      $selectedEl = this.$('.selected').eq(0);
      if ($selectedEl.length > 0) {
        model = this.collection.findWhere({
          url: $selectedEl.data('url')
        });
        model.on('change', this.renderTags, this);
        return model.addTag(tag);
      } else if (this.collection.addTag(tag) === false) {
        if (parent = $("[data-tag='" + tag + "']").parents('li')) {
          parent.addClass('glow');
          return setTimeout(function() {
            return parent.removeClass('glow');
          }, 1000);
        }
      }
    };

    TagVisitView.prototype.getI18nValues = function() {
      return this.t(['tag_visits_title', 'prompt_done_button']);
    };

    return TagVisitView;

  })(BH.Views.ModalView);

}).call(this);
