// Generated by CoffeeScript 1.6.1
(function() {

  BH.Views.Cache = (function() {

    function Cache(options) {
      this.options = options;
      this.settings = this.options.settings;
      this.state = this.options.state;
      this.expire();
    }

    Cache.prototype.expire = function() {
      return this.cache = {
        weeks: {},
        days: {},
        tags: {}
      };
    };

    Cache.prototype.tagsView = function() {
      var tags;
      if (!this.cache.allTags) {
        tags = new BH.Collections.Tags([]);
        this.cache.allTags = new BH.Views.TagsView({
          collection: tags,
          state: this.state
        });
        this.insert(this.cache.allTags.render().el);
      }
      return this.cache.allTags;
    };

    Cache.prototype.tagView = function(id) {
      var tag;
      if (!this.cache.tags[id]) {
        tag = new BH.Models.Tag({
          name: id
        });
        this.cache.tags[id] = new BH.Views.TagView({
          name: id,
          model: tag,
          state: this.state
        });
        this.insert(this.cache.tags[id].render().el);
      }
      return this.cache.tags[id];
    };

    Cache.prototype.weekView = function(id) {
      var history, week;
      if (!this.cache.weeks[id]) {
        week = new BH.Models.Week({
          date: moment(new Date(id))
        }, {
          settings: this.settings
        });
        history = new BH.Models.WeekHistory(week.toHistory());
        this.cache.weeks[id] = new BH.Views.WeekView({
          model: week,
          history: history
        });
        this.insert(this.cache.weeks[id].render().el);
      }
      return this.cache.weeks[id];
    };

    Cache.prototype.dayView = function(id) {
      var day, history;
      if (!this.cache.days[id]) {
        day = new BH.Models.Day({
          date: moment(new Date(id))
        }, {
          settings: this.settings
        });
        history = new BH.Models.DayHistory(day.toHistory(), {
          settings: this.settings
        });
        this.cache.days[id] = new BH.Views.DayView({
          model: day,
          history: history
        });
        this.insert(this.cache.days[id].render().el);
      }
      return this.cache.days[id];
    };

    Cache.prototype.searchView = function(options) {
      var history, search;
      if (!this.cache.search || options.expired) {
        search = new BH.Models.Search();
        history = new BH.Models.SearchHistory(search.toHistory());
        this.cache.search = new BH.Views.SearchView({
          model: search,
          history: history
        });
        this.insert(this.cache.search.render().el);
      }
      return this.cache.search;
    };

    Cache.prototype.settingsView = function() {
      if (!this.cache.settings) {
        this.cache.settings = new BH.Views.SettingsView({
          model: this.settings,
          state: this.state
        });
        this.insert(this.cache.settings.render().el);
      }
      return this.cache.settings;
    };

    Cache.prototype.insert = function(html) {
      return $('.mainview').append(html);
    };

    return Cache;

  })();

}).call(this);
