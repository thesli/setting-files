// Generated by CoffeeScript 1.6.1
(function() {
  var visitData,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Presenters.DayHistoryPresenter = (function(_super) {

    __extends(DayHistoryPresenter, _super);

    function DayHistoryPresenter(intervals) {
      this.intervals = intervals;
    }

    DayHistoryPresenter.prototype.history = function() {
      var groupedVisit, groupedVisits, interval, out, preppedInterval, visit, _i, _j, _len, _len1, _ref, _ref1;
      out = [];
      _ref = this.intervals;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        interval = _ref[_i];
        preppedInterval = {
          amount: this.t('number_of_visits', [interval.visits.length.toString(), '<span class="amount">', '</span>']),
          time: moment(interval.datetime).format('LT'),
          id: interval.id,
          visits: []
        };
        _ref1 = interval.visits;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          visit = _ref1[_j];
          if (visit.isGrouped) {
            groupedVisits = (function() {
              var _k, _len2, _ref2, _results;
              _ref2 = visit.visits;
              _results = [];
              for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
                groupedVisit = _ref2[_k];
                _results.push(visitData(groupedVisit));
              }
              return _results;
            })();
            preppedInterval.visits.push(_.extend(visit, {
              groupedVisits: groupedVisits
            }));
          } else {
            preppedInterval.visits.push(visitData(visit));
          }
        }
        out.push(preppedInterval);
      }
      return out;
    };

    return DayHistoryPresenter;

  })(BH.Presenters.Base);

  visitData = function(visit) {
    return _.extend(visit, {
      isGrouped: false
    });
  };

}).call(this);
