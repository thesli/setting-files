//@ sourceMappingURL=site_tag.map
// Generated by CoffeeScript 1.6.1
(function() {

  BH.Persistence.SiteTag = (function() {

    function SiteTag(options) {
      if (options.localStore == null) {
        throw "Localstore is not set";
      }
      this.localStore = options.localStore;
    }

    SiteTag.prototype.fetch = function(site, callback) {
      var _this = this;
      if (callback == null) {
        callback = function() {};
      }
      this.site = site;
      this.site.datetime = new Date().getTime();
      return this.localStore.get('tags', function(data) {
        var tags;
        tags = data.tags || [];
        return _this.localStore.get(tags, function(data) {
          var foundTags, sites, tag, _i, _len;
          foundTags = [];
          for (tag in data) {
            sites = data[tag];
            for (_i = 0, _len = sites.length; _i < _len; _i++) {
              site = sites[_i];
              if (site.url === _this.site.url) {
                foundTags.push(tag);
              }
            }
          }
          return callback(foundTags);
        });
      });
    };

    SiteTag.prototype.add = function(tag) {
      var _this = this;
      if (this.site == null) {
        throw "Site must be fetched";
      }
      this.localStore.get("tags", function(data) {
        if (data.tags == null) {
          data = {
            tags: []
          };
        }
        if (data.tags.indexOf(tag) === -1) {
          data.tags.push(tag);
        }
        return _this.localStore.set(data);
      });
      return this.localStore.get(tag, function(data) {
        data[tag] || (data[tag] = []);
        data[tag].push(_this.site);
        return _this.localStore.set(data);
      });
    };

    SiteTag.prototype.remove = function(tag) {
      var _this = this;
      if (this.site == null) {
        throw "Site must be fetched";
      }
      return this.localStore.get(tag, function(data) {
        data[tag] = _.reject(data[tag], function(site) {
          return _this.site.url === site.url;
        });
        return _this.localStore.set(data);
      });
    };

    return SiteTag;

  })();

}).call(this);
