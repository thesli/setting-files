// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BH.Views.SearchView = (function(_super) {

    __extends(SearchView, _super);

    function SearchView() {
      return SearchView.__super__.constructor.apply(this, arguments);
    }

    SearchView.include(BH.Modules.I18n);

    SearchView.include(BH.Modules.Url);

    SearchView.prototype.className = 'search_view with_controls';

    SearchView.prototype.template = BH.Templates['search'];

    SearchView.prototype.events = {
      'click .delete_all': 'clickedDeleteAll',
      'click .corner .delete': 'clickedCancelSearch',
      'click .fresh_search': 'clickedFreshSearch',
      'keyup .search': 'onSearchTyped',
      'blur .search': 'onSearchBlurred'
    };

    SearchView.prototype.initialize = function() {
      this.collection.on('reset', this.onHistoryChanged, this);
      this.model.on('change:query', this.onQueryChanged, this);
      this.model.on('change:cacheDatetime', this.onCacheChanged, this);
      this.page = new Backbone.Model({
        page: 1
      });
      return this.page.on('change:page', this.renderSearchResults, this);
    };

    SearchView.prototype.render = function() {
      var html, presenter, properties,
        _this = this;
      presenter = new BH.Presenters.SearchPresenter(this.model.toJSON());
      properties = _.extend(this.getI18nValues(), presenter.searchInfo());
      html = Mustache.to_html(this.template, properties);
      this.$el.append(html);
      if (this.model.get('query') === '') {
        this.$el.addClass('loaded');
        this.$('.title').text(this.t('search_title'));
        this.$('.number_of_results').text('');
        setTimeout(function() {
          return _this.assignTabIndices('.visit a:first-child');
        }, 0);
      }
      this.updateDeleteButton();
      return this;
    };

    SearchView.prototype.pageTitle = function() {
      return this.t('searching_title');
    };

    SearchView.prototype.onHistoryChanged = function() {
      this.renderVisits();
      this.assignTabIndices('.visit a:first-child');
      return this.updateDeleteButton();
    };

    SearchView.prototype.onCacheChanged = function() {
      var date, datetime, time;
      if (this.model.get('cacheDatetime')) {
        datetime = moment(this.model.get('cacheDatetime'));
        date = datetime.format(this.t('extended_formal_date'));
        time = datetime.format(this.t('local_time'));
        this.$('.cached .datetime').text("" + time + " " + date);
        return this.$('.cached').show();
      } else {
        return this.$('.cached').hide();
      }
    };

    SearchView.prototype.onQueryChanged = function() {
      this.updateQueryReferences();
      $('.pagination').html('');
      if (this.model.get('query') !== '') {
        this.$('.corner').addClass('cancelable');
        return this.$('.cached').hide();
      }
    };

    SearchView.prototype.onPageClicked = function(ev) {
      var $el;
      ev.preventDefault();
      $el = $(ev.currentTarget);
      $('.pagination a').removeClass('selected');
      $el.addClass('selected');
      return this.renderSearchResults();
    };

    SearchView.prototype.clickedFreshSearch = function(ev) {
      ev.preventDefault();
      new BH.Lib.SearchHistory().expireCache();
      return window.location.reload();
    };

    SearchView.prototype.updateQueryReferences = function() {
      var page, presenter, properties;
      presenter = new BH.Presenters.SearchPresenter(this.model.toJSON());
      properties = presenter.searchInfo();
      this.$el.removeClass('loaded');
      this.$('.title').text(properties.title);
      this.$('.content').html('');
      page = this.page.get('page') !== 1 ? "/p" + (this.page.get('page')) : "";
      return router.navigate(this.urlFor('search', properties.query) + page);
    };

    SearchView.prototype.renderVisits = function() {
      var searchPaginationView;
      this.$el.addClass('loaded');
      this.$('.search').focus();
      searchPaginationView = new BH.Views.SearchPaginationView({
        collection: this.collection,
        query: this.model.get('query'),
        el: $('.pagination'),
        model: this.page
      });
      searchPaginationView.render();
      return this.renderSearchResults();
    };

    SearchView.prototype.renderSearchResults = function() {
      if (this.searchResultsView) {
        this.searchResultsView.undelegateEvents();
      }
      this.searchResultsView = new BH.Views.SearchResultsView({
        query: this.model.get('query'),
        collection: this.collection,
        el: this.$el.children('.content'),
        page: this.page.get('page') - 1
      });
      this.searchResultsView.render();
      this.searchResultsView.insertTags();
      return this.searchResultsView.attachDragging();
    };

    SearchView.prototype.updateDeleteButton = function() {
      var deleteButton;
      deleteButton = this.$('.delete_all');
      if (this.collection.length === 0 || this.model.get('query') === '') {
        return deleteButton.attr('disabled', 'disabled');
      } else {
        return deleteButton.removeAttr('disabled');
      }
    };

    SearchView.prototype.clickedCancelSearch = function(ev) {
      ev.preventDefault();
      return router.navigate('search', {
        trigger: true
      });
    };

    SearchView.prototype.clickedDeleteAll = function(ev) {
      ev.preventDefault();
      if ($(ev.target).parent().attr('disabled') !== 'disabled') {
        this.promptView = BH.Views.CreatePrompt(this.t('confirm_delete_all_search_results'));
        this.promptView.open();
        return this.promptView.model.on('change', this.deleteAction, this);
      }
    };

    SearchView.prototype.deleteAction = function(prompt) {
      var _this = this;
      if (prompt.get('action')) {
        analyticsTracker.searchResultsDeletion();
        return new BH.Lib.SearchHistory(this.model.get('query')).destroy(function() {
          _this.collection.reset([]);
          _this.model.unset('cacheDatetime');
          return _this.promptView.close();
        });
      } else {
        return this.promptView.close();
      }
    };

    SearchView.prototype.getI18nValues = function() {
      return this.t(['search_time_frame', 'search_input_placeholder_text', 'delete_all_visits_for_search_button', 'no_visits_found']);
    };

    return SearchView;

  })(BH.Views.MainView);

}).call(this);
